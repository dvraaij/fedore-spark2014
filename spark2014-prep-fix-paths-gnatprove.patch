--- a/src/gnatprove/configuration.ads
+++ b/src/gnatprove/configuration.ads
@@ -39,6 +39,7 @@
 with Named_Semaphores;  use Named_Semaphores;
 with String_Utils;      use String_Utils;
 with VC_Kinds;          use VC_Kinds;
+with SPARK_Install;
 
 package Configuration is
 
@@ -223,64 +224,6 @@
    Max_Non_Blank_Lines : constant := 6;
    --  Maximum number of consecutive non blank lines on standard output
 
-   package SPARK_Install is
-      use GNAT.Strings;
-
-      --  Here we set the various paths that are needed during a run of
-      --  gnatprove. The hierarchy looks as follows:
-      --  prefix
-      --  prefix/lib
-      --  prefix/libexec/spark
-      --  prefix/libexec/spark/bin      - all auxiliary binaries,
-      --                                  e.g. gprbuild
-      --  prefix/share
-      --  prefix/share/why3             - files that come with Why3
-      --  prefix/share/spark/config     - various config files
-      --  prefix/share/spark/error_codes - documentation of errors/warnings
-      --  prefix/share/spark/stdlib     - Why3 files of the stdlib
-      --  prefix/share/spark/theories   - Why3 files for Ada theories
-
-      Prefix                   : constant String := Executable_Location;
-      Lib                      : constant String := Compose (Prefix, "lib");
-      Libexec_Spark            : constant String :=
-        Compose (Compose (Prefix, "libexec"), "spark");
-      Libexec_Spark_Bin        : constant String :=
-        Compose (Libexec_Spark, "bin");
-      Share                    : constant String :=
-        Compose (Prefix, "share");
-      Libexec_Share_Why3       : constant String :=
-        Compose (Compose (Libexec_Spark, "share"), "why3");
-      Share_Spark              : constant String :=
-        Compose (Share, "spark");
-      Share_Spark_Theories     : constant String :=
-        Compose (Share_Spark, "theories");
-      Share_Spark_Config       : constant String :=
-        Compose (Share_Spark, "config");
-      Share_Spark_Explain_Codes : constant String :=
-        Compose (Share_Spark, "explain_codes");
-      Share_Spark_Runtimes     : constant String :=
-        Compose (Share_Spark, "runtimes");
-      Help_Msg_File            : constant String :=
-        Compose (Share_Spark, "help.txt");
-      Gpr_Frames_DB            : constant String :=
-        Compose (Share_Spark_Config, "frames");
-      Gpr_Translation_DB : constant String :=
-        Compose (Share_Spark_Config, "gnat2why");
-      Gnatprove_Conf           : constant String :=
-        Compose (Share_Spark_Config, "gnatprove.conf");
-      GNSA_Dir                 : constant String :=
-        (if Ada.Environment_Variables.Exists ("GNSA_ROOT")
-         then Ada.Environment_Variables.Value ("GNSA_ROOT")
-         else Libexec_Spark);
-      GNSA_Dir_Bin             : constant String :=
-        Compose (GNSA_Dir, "bin");
-      Z3_Present               : Boolean;
-      CVC5_Present             : Boolean;
-      Colibri_Present          : Boolean;
-      Help_Message             : constant String :=
-        Read_File_Into_String (Help_Msg_File);
-   end SPARK_Install;
-
    Label_Length : constant := 26;
    --  Maximum length of label in report. Other characters are discarded
 
--- a/src/gnatprove/gnatprove.adb
+++ b/src/gnatprove/gnatprove.adb
@@ -86,6 +86,7 @@
 with GPR2.Project.View;
 with Named_Semaphores; use Named_Semaphores;
 with String_Utils;     use String_Utils;
+with SPARK_Install;
 
 procedure Gnatprove with SPARK_Mode is
 
@@ -847,10 +848,9 @@
       Path_Val : constant String := Value ("PATH", "");
       Gpr_Val  : constant String := Value ("GPR_PROJECT_PATH", "");
       Gpr_Tool : constant String := Value ("GPR_TOOL", "");
-      Libgnat  : constant String :=
-        Compose (SPARK_Install.Lib, "gnat");
-      Sharegpr : constant String :=
-        Compose (SPARK_Install.Share, "gpr");
+      Libgnat  : constant String := SPARK_Install.Lib_GNAT;
+      Sharegpr : constant String := SPARK_Install.Share_GPR;
+
    begin
       --  Unset various environmment variables which might confuse the compiler
       --  or gprbuild.
