--- a/src/gnatprove/configuration.adb
+++ b/src/gnatprove/configuration.adb
@@ -40,6 +40,7 @@
 with GPR2.Build.Source;
 with GPR2.Build.View_Db;
 with GPR2.KB;
+with GPR2.Log;
 with GPR2.Message;
 with GPR2.Options;
 with GPR2.Path_Name;
@@ -50,8 +51,6 @@
 with GPR2.Project.Registry.Exchange;
 with GPR2.Project.Registry.Pack;
 with GPR2.Project.Registry.Pack.Description;
-with GPR2.Reporter.Console;
-
 with Platform;          use Platform;
 with SPARK2014VSN;      use SPARK2014VSN;
 with System.Multiprocessors;
@@ -73,12 +72,6 @@
    --  This is the project environment used to load the project. It may be
    --  modified before loading it, e.g. -X switches
 
-   type Spark_Reporter is new GPR2.Reporter.Console.Object with null record;
-
-   overriding procedure Internal_Report
-     (Self    : in out Spark_Reporter;
-      Message : GPR2.Message.Object);
-
    procedure Abort_Msg (Msg       : String;
                         With_Help : Boolean)
      with No_Return;
@@ -179,8 +172,9 @@
                                          Fn   : String);
    --  Raise an error if the file FN is not part of the project
 
-   procedure Check_Duplicate_Bodies (Msg : GPR2.Message.Object);
-   --  Raise an error if the message is about duplicate bodies.
+   procedure Check_Duplicate_Bodies (Msgs : GPR2.Log.Object);
+   --  Raise an error if the log object contains a message about duplicate
+   --  bodies.
 
    function Is_Coq_Prover (FS : File_Specific) return Boolean;
    --  @return True iff one alternate prover is "coq"
@@ -268,29 +262,19 @@
    -- Check_Duplicate_Bodies --
    ----------------------------
 
-   procedure Check_Duplicate_Bodies (Msg : GPR2.Message.Object) is
+   procedure Check_Duplicate_Bodies (Msgs : GPR2.Log.Object) is
       use type GPR2.Message.Level_Value;
    begin
-      if Msg.Level = GPR2.Message.Warning
-        and then Contains (Msg.Message, "duplicated body")
-      then
-         Abort_Msg ("Stopping analysis due to duplicate bodies",
-                    With_Help => False);
-      end if;
+      for Msg of Msgs loop
+         if Msg.Level = GPR2.Message.Warning
+           and then Contains (Msg.Message, "duplicated body")
+         then
+            Abort_Msg ("Stopping analysis due to duplicate bodies",
+                       With_Help => False);
+         end if;
+      end loop;
    end Check_Duplicate_Bodies;
 
-   ---------------------
-   -- Internal_Report --
-   ---------------------
-
-   overriding procedure Internal_Report
-     (Self    : in out Spark_Reporter;
-      Message : GPR2.Message.Object) is
-   begin
-      GPR2.Reporter.Console.Object (Self).Internal_Report (Message);
-      Check_Duplicate_Bodies (Message);
-   end Internal_Report;
-
    --------------------------------
    -- Check_File_Part_Of_Project --
    --------------------------------
@@ -1689,34 +1673,37 @@
               (if Null_Or_Empty_String (CL_Switches.P) then
                     No_Project_File_Mode
                else CL_Switches.P.all);
-            Status       : Boolean;
+            Status : Boolean;
+         begin
+            Proj_Opt.Add_Switch (Options.P, Project_File);
 
             --  Do not display warnings, as those messages will be duplicated
             --  during the call to gprbuild.
-            Reporter     : Spark_Reporter :=
-                             (GPR2.Reporter.Console.Create
-                               (GPR2.Reporter.No_Warnings) with null record);
-         begin
-            Proj_Opt.Add_Switch (Options.P, Project_File);
+            GPR2.Project.Tree.Verbosity := GPR2.Project.Tree.Errors;
 
-            Status := Tree.Load
-              (Proj_Opt,
-               Reporter         => Reporter,
-               Absent_Dir_Error => GPR2.No_Error);
+            Status := Tree.Load (Proj_Opt, Absent_Dir_Error => GPR2.No_Error);
 
             if not Status then
                Fail ("");
             end if;
 
-            --  When updating the sources we now need both warnings and
-            --  errors, in particular since duplicated body situation is
-            --  a warning.
+            --  Pending eng/gpr/gpr-issues#39, we only update the sources if
+            --  the root project actually has sources.
 
-            Reporter.Set_Verbosity (GPR2.Reporter.Regular);
-            Tree.Set_Reporter (Reporter);
-
-            if not Tree.Update_Sources then
-               Fail ("");
+            if Tree.Root_Project.Kind in With_Source_Dirs_Kind | Aggregate_Kind
+            then
+               declare
+                  Msgs : GPR2.Log.Object;
+               begin
+                  --  When updating the sources we now need both warnings and
+                  --  errors, in particular since duplicated body situation is
+                  --  a warning.
+
+                  GPR2.Project.Tree.Verbosity :=
+                    GPR2.Project.Tree.Warnings_And_Errors;
+                  Tree.Update_Sources (Msgs);
+                  Check_Duplicate_Bodies (Msgs);
+               end;
             end if;
          end;
       end Init;
--- a/testsuite/gnatprove/tests/614__duplicate_unit/test.out
+++ b/testsuite/gnatprove/tests/614__duplicate_unit/test.out
@@ -2,4 +2,5 @@
 Try "gnatprove --help" for more information.
 a.adb: warning: unit name "B" does not match source name
 c.adb: warning: unit name "B" does not match source name
+test.gpr: warning: duplicated body for unit "B" in c.adb and a.adb
 test.gpr: warning: duplicated body for unit "B" in c.adb and b.adb
